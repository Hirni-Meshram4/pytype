---

# Outstanding TODOs:
# - manylinux{1,2010,2014}?
# - Auto PyPI upload?
# - Build sdist here too while we're at it?
# - Don't run this on every push ('on' param)

name: Build wheels
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
jobs:
  manylinux_wheels:
    name: Python ${{ matrix.python_tag }} ${{ matrix.platform }} wheels
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - manylinux2014_x86_64
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Pull Docker image
        run: |
          DOCKER_IMAGE="quay.io/pypa/${{ matrix.platform }}"
          echo "DOCKER_IMAGE=$DOCKER_IMAGE" >> $GITHUB_ENV
          docker image pull "$DOCKER_IMAGE"
      - name: Build manylinux wheels
        env:
          PYTHON_TAGS: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39'
        run: |
          docker container run \
            --rm \
            -e PLAT=${{ matrix.platform }} \
            -e PYTHON_TAGS="$PYTHON_TAGS" \
            -v "$(pwd):/io" \
            "$DOCKER_IMAGE" \
            /io/build_scripts/wheels/manylinux.sh
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
  macosx_wheels:
    name: Python ${{ matrix.python_version }} MacOS wheels
    # Note: the container MacOS version may differ from the SDK
    # used to build Python there.  It is the latter that determines
    # the wheel's platform tag.
    # https://github.com/actions/virtual-environments/issues/696
    runs-on: macos-latest
    strategy:
      matrix:
        python_version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - name: Build MacOS wheels
        run: './build_scripts/wheels/macos.sh'
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
          
  build-aarch64:
    name: Python manylinux2014_aarch64 wheels
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      PYTHON_TAGS: 'cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39'
      img: quay.io/pypa/manylinux2014_aarch64
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Checkout submodules
      run: |
        git submodule init
        git submodule update
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Build Wheel
      run: |
            docker run --rm -v ${{ github.workspace }}:/io:rw --workdir=/io \
            -e PLAT=manylinux2014_aarch64 \
            -e PYTHON_TAGS="$PYTHON_TAGS" \
            ${{ env.img }} \
            bash -exc 'yum install -y sudo && \
            sudo yum install -y epel-release && \
            sudo yum-config-manager --enable epel && \
            sudo yum install libSM dnf glibc-devel -y && \
            sudo dnf install -y epel-release && \
            sudo yum-config-manager --enable PowerTools && \
            sudo yum-config-manager --add-repo=https://negativo17.org/repos/epel-multimedia.repo && \
            dnf install -y ffmpeg libXext && \
            /io/build_scripts/wheels/manylinux.sh'
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist            
